# (C) Copyright 2021 Hewlett Packard Enterprise Development LP
--- 


#- name:  Set replication details
#  set_fact:
#    airgap_replica: 1
#  when:
#    - airgap_replica is not defined or airgap_replica < 1

- name: Set proxy url without credentials
  set_fact:
    proxy_url_https: "http://{{ airgap_proxy_IP }}:{{ airgap_proxy_port }}"
    proxy_url_http: "http://{{ airgap_proxy_IP }}:{{ airgap_proxy_port }}"
  when:
    - airgap_proxy_IP is defined | default('', true) | trim != ''
    - airgap_proxy_port is defined | default('', true) | trim != ''
    - (airgap_proxy_username is not defined) or (airgap_proxy_username |lower == 'none')
    - (airgap_proxy_password is not defined) or (airgap_proxy_password |lower == 'none')

- name: Set proxy url with credentials
  set_fact:
    proxy_url_http: "http://{{ airgap_proxy_username }}:{{ airgap_proxy_password }}@{{ airgap_proxy_IP }}:{{ airgap_proxy_port }}"
    proxy_url_https: "http://{{ airgap_proxy_username }}:{{ airgap_proxy_password }}@{{ airgap_proxy_IP }}:{{ airgap_proxy_port }}"
  when:
    - airgap_proxy_IP is defined | default('', true) | trim != ''
    - airgap_proxy_port is defined | default('', true) | trim != ''
    - (airgap_proxy_username is defined) and (airgap_proxy_username |lower != 'none')
    - (airgap_proxy_password is defined) and (airgap_proxy_password |lower != 'none')
 
- name: copying file with playbook
  template:
    src: ../templates/airgap-pod-deployment.yaml.j2
    dest: /tmp/airgap-pod-deployment.yaml
     
- name: Run command to deploy airgap-utility
  shell:
    cmd: "kubectl create -f /tmp/airgap-pod-deployment.yaml -n {{ airgap_ns }}"
  register: airgap_pods_created
  ignore_errors: yes

- pause:
    prompt: "Airgap Utility pod already running, Do you want to copy images using this airgap-utility pod (yes/no)?"
  register: pod_result
  when: "'Error from server (AlreadyExists): error when creating' in airgap_pods_created.stderr"

- fail:
    msg: "Airgap Utility pod already running, sence exiting"
  when: pod_result.user_input == "no"

- name: Get airgap pod name
  shell:
    cmd: "kubectl get pods -n {{ airgap_ns }} |grep airgap-utility1* | awk '{print $1}'"
  register: pod_name

- name: Copy images to the local Harbor
  include_tasks: airgap-utility-copy.yaml 
  when: pod_result.user_input == "yes"
  
- name: Deploy new pod for Airgap-Utility
  include_tasks: airgap-utility-new-pod.yaml
  when: "'Error from server (AlreadyExists): error when creating' not in airgap_pods_created.stderr"


